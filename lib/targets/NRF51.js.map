{"version":3,"sources":["targets/NRF51.ts"],"names":[],"mappings":";;AAEA,MAAM,gBAAgB,GAAG;IACrB,eAAe,EAAE,UAAU;IAC3B,iBAAiB,EAAE,IAAI;IAEvB,SAAS,EAAE,UAAU;IAErB,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,GAAG;IAEf,YAAY,EAAE,IAAI,WAAW,CAAC;QAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;QAC9F,UAAU;KACb,CAAC;IAEF,WAAW,EAAE,UAAU;IACvB,gBAAgB,EAAE,CAAC;IAEnB,WAAW,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IACrC,QAAQ,EAAE,KAAK;IAEf,UAAU,EAAE,UAAU;IACtB,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE,UAAU;IAClB,aAAa,EAAE,UAAU;IAEzB,YAAY,EAAE,UAAU;IACxB,UAAU,EAAE,UAAU;CACzB,CAAC;AAEF;IAGI;QACI,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;IACtC,CAAC;IAEM,oBAAoB,CAAC,QAAgB,EAAE,KAAkB;QAC5D,WAAW;IACf,CAAC;CACJ;AAVD,sBAUC","file":"NRF51.js","sourcesContent":["import {IFlashAlgo, IPlatform} from \"./platform\";\n\nconst NRF51_FLASH_ALGO = {\n    analyzerAddress: 0x20003000,  // Analyzer 0x20003000..0x20003600\n    analyzerSupported: true,\n\n    beginData: 0x20002000, // Analyzer uses a max of 1 KB data (256 pages * 4 bytes / page)\n\n    flashSize: 0x40000,\n    flashStart: 0x0,\n\n    instructions: new Uint32Array([\n        0xE00ABE00, 0x062D780D, 0x24084068, 0xD3000040, 0x1E644058, 0x1C49D1FA, 0x2A001E52, 0x4770D1F2,\n        0x47702000, 0x47702000, 0x4c26b570, 0x60602002, 0x60e02001, 0x68284d24, 0xd00207c0, 0x60602000,\n        0xf000bd70, 0xe7f6f82c, 0x4c1eb570, 0x60612102, 0x4288491e, 0x2001d302, 0xe0006160, 0x4d1a60a0,\n        0xf81df000, 0x07c06828, 0x2000d0fa, 0xbd706060, 0x4605b5f8, 0x4813088e, 0x46142101, 0x4f126041,\n        0xc501cc01, 0x07c06838, 0x1e76d006, 0x480dd1f8, 0x60412100, 0xbdf84608, 0xf801f000, 0x480ce7f2,\n        0x06006840, 0xd00b0e00, 0x6849490a, 0xd0072900, 0x4a0a4909, 0xd00007c3, 0x1d09600a, 0xd1f90840,\n        0x00004770, 0x4001e500, 0x4001e400, 0x10001000, 0x40010400, 0x40010500, 0x40010600, 0x6e524635,\n        0x00000000,\n    ]),\n\n    loadAddress: 0x20000000,\n    minProgramLength: 4,\n\n    pageBuffers: [0x20002000, 0x20002400],   // Enable double buffering\n    pageSize: 0x400,\n\n    pcEraseAll: 0x20000029,\n    pcEraseSector: 0x20000049,\n    pcInit: 0x20000021,\n    pcProgramPage: 0x20000071,\n\n    stackPointer: 0x20001000,\n    staticBase: 0x20000170,\n};\n\nexport class NRF51 implements IPlatform {\n    public flashAlgo: IFlashAlgo;\n\n    constructor() {\n        this.flashAlgo = NRF51_FLASH_ALGO;\n    }\n\n    public overrideSecurityBits(_address: number, _data: Uint32Array) {\n        /* empty */\n    }\n}\n"],"sourceRoot":"../../src"}