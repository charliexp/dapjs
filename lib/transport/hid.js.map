{"version":3,"sources":["transport/hid.ts"],"names":[],"mappings":"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","file":"hid.js","sourcesContent":["export interface IHID {\n    write(data: ArrayBuffer): Promise<void>;\n    read(): Promise<Uint8Array>;\n    close(): Promise<void>;\n}\n\nfunction bufferExtend(source: ArrayBuffer, length: number) {\n    const sarr = new Uint8Array(source);\n\n    const dest = new ArrayBuffer(length);\n    const darr = new Uint8Array(dest);\n\n    for (let i = 0; i < Math.min(source.byteLength, length); i++) {\n        darr[i] = sarr[i];\n    }\n\n    return dest;\n}\n\nexport class HID {\n    private device: USBDevice;\n    private interfaces: USBInterface[];\n    private interface: USBInterface;\n    private endpoints: USBEndpoint[];\n    private epIn: USBEndpoint;\n    private epOut: USBEndpoint;\n\n    constructor(device: USBDevice) {\n        this.device = device;\n    }\n\n    public async open() {\n        await this.device.open();\n        await this.device.selectConfiguration(1);\n\n        const hids = this.device.configuration.interfaces.filter(\n            intf => intf.alternates[0].interfaceClass === 0xFF);\n\n        if (hids.length === 0) {\n            throw new Error(\"No HID interfaces found.\");\n        }\n\n        this.interfaces = hids;\n\n        if (this.interfaces.length === 1) {\n            this.interface = this.interfaces[0];\n        }\n\n        await this.device.claimInterface(this.interface.interfaceNumber);\n\n        this.endpoints = this.interface.alternates[0].endpoints;\n\n        this.epIn = null;\n        this.epOut = null;\n\n        for (const endpoint of this.endpoints) {\n            if (endpoint.direction === \"in\") {\n                this.epIn = endpoint;\n            } else {\n                this.epOut = endpoint;\n            }\n        }\n\n        if (this.epIn === null || this.epOut === null) {\n            // tslint:disable-next-line:no-console\n            console.log(\"Unable to find an in and an out endpoint.\");\n        }\n    }\n\n    public async close() {\n        return this.device.close();\n    }\n\n    public async write(data: ArrayBuffer): Promise<USBOutTransferResult> {\n        const reportSize = this.epOut.packetSize;\n        const buffer = bufferExtend(data, reportSize);\n\n        return this.device.transferOut(this.epOut.endpointNumber, buffer);\n    }\n\n    public async read(): Promise<DataView> {\n        const reportSize = this.epIn.packetSize;\n\n        return this.device.transferIn(this.epIn.endpointNumber, reportSize)\n            .then(res => res.data);\n    }\n}\n"],"sourceRoot":"../../src"}