{"version":3,"sources":["cortex/constants.ts"],"names":[],"mappings":";;AAAa,QAAA,uBAAuB,GAAG,KAAK,CAAC,QAAQ,CAAC;AAoEzC,QAAA,sBAAsB,GAAG,UAAU,CAAC;AACpC,QAAA,qBAAqB,GAAG,EAAE,CAAC;AAC3B,QAAA,kBAAkB,GAAG,UAAU,CAAC;AAChC,QAAA,iBAAiB,GAAG,EAAE,CAAC;AACvB,QAAA,uBAAuB,GAAG,UAAU,CAAC;AACrC,QAAA,sBAAsB,GAAG,EAAE,CAAC;AAC5B,QAAA,iBAAiB,GAAG,UAAU,CAAC;AAC/B,QAAA,gBAAgB,GAAG,CAAC,CAAC;AACrB,QAAA,mBAAmB,GAAG,UAAU,CAAC;AACjC,QAAA,kBAAkB,GAAG,CAAC,CAAC;AAWvB,QAAA,QAAQ,GAAqB,IAAI,GAAG,EAAe,CAAC;AACjE,gBAAQ,CAAC,GAAG,kBAAa,QAAQ,CAAC,CAAC;AACnC,gBAAQ,CAAC,GAAG,kBAAa,QAAQ,CAAC,CAAC;AAUtB,QAAA,SAAS,GAA0B,IAAI,GAAG,EAAoB,CAAC;AAC5E,iBAAS,CAAC,GAAG,sBAAoB,WAAW,CAAC,CAAC;AAC9C,iBAAS,CAAC,GAAG,sBAAoB,WAAW,CAAC,CAAC;AAC9C,iBAAS,CAAC,GAAG,sBAAoB,WAAW,CAAC,CAAC;AAC9C,iBAAS,CAAC,GAAG,sBAAoB,WAAW,CAAC,CAAC;AAC9C,iBAAS,CAAC,GAAG,uBAAqB,YAAY,CAAC,CAAC","file":"constants.js","sourcesContent":["export const DEFAULT_RUNCODE_TIMEOUT = 10000 /* ms */;\n\nexport const enum CortexSpecialReg {\n    // Debug Fault Status Register\n    DFSR = 0xE000ED30,\n    DFSR_EXTERNAL = (1 << 4),\n    DFSR_VCATCH = (1 << 3),\n    DFSR_DWTTRAP = (1 << 2),\n    DFSR_BKPT = (1 << 1),\n    DFSR_HALTED = (1 << 0),\n\n    // Debug Exception and Monitor Control Register\n    DEMCR = 0xE000EDFC,\n    // DWTENA in armv6 architecture reference manual\n    DEMCR_TRCENA = (1 << 24),\n    DEMCR_VC_HARDERR = (1 << 10),\n    DEMCR_VC_BUSERR = (1 << 8),\n    DEMCR_VC_CORERESET = (1 << 0),\n\n    // CPUID Register\n    CPUID = 0xE000ED00,\n\n    // Debug Core Register Selector Register\n    DCRSR = 0xE000EDF4,\n    DCRSR_REGWnR = (1 << 16),\n    DCRSR_REGSEL = 0x1F,\n\n    // Debug Halting Control and Status Register\n    DHCSR = 0xE000EDF0,\n    C_DEBUGEN = (1 << 0),\n    C_HALT = (1 << 1),\n    C_STEP = (1 << 2),\n    C_MASKINTS = (1 << 3),\n    C_SNAPSTALL = (1 << 5),\n    S_REGRDY = (1 << 16),\n    S_HALT = (1 << 17),\n    S_SLEEP = (1 << 18),\n    S_LOCKUP = (1 << 19),\n    S_RETIRE_ST = (1 << 24),\n    S_RESET_ST = (1 << 25),\n\n    // Debug Core Register Data Register\n    DCRDR = 0xE000EDF8,\n\n    // Coprocessor Access Control Register\n    CPACR = 0xE000ED88,\n    CPACR_CP10_CP11_MASK = (3 << 20) | (3 << 22),\n\n    NVIC_AIRCR = (0xE000ED0C),\n    NVIC_AIRCR_VECTKEY = (0x5FA << 16),\n    NVIC_AIRCR_VECTRESET = (1 << 0),\n    NVIC_AIRCR_SYSRESETREQ = (1 << 2),\n\n    DBGKEY = (0xA05F << 16),\n\n    // FPB (breakpoint)\n    FP_CTRL = (0xE0002000),\n    FP_CTRL_KEY = (1 << 1),\n    FP_COMP0 = (0xE0002008),\n\n    // DWT (data watchpoint & trace)\n    DWT_CTRL = 0xE0001000,\n    DWT_COMP_BASE = 0xE0001020,\n    DWT_MASK_OFFSET = 4,\n    DWT_FUNCTION_OFFSET = 8,\n    DWT_COMP_BLOCK_SIZE = 0x10,\n}\n\nexport const CPUID_IMPLEMENTER_MASK = 0xff000000;\nexport const CPUID_IMPLEMENTER_POS = 24;\nexport const CPUID_VARIANT_MASK = 0x00f00000;\nexport const CPUID_VARIANT_POS = 20;\nexport const CPUID_ARCHITECTURE_MASK = 0x000f0000;\nexport const CPUID_ARCHITECTURE_POS = 16;\nexport const CPUID_PARTNO_MASK = 0x0000fff0;\nexport const CPUID_PARTNO_POS = 4;\nexport const CPUID_REVISION_MASK = 0x0000000f;\nexport const CPUID_REVISION_POS = 0;\n\nexport const enum CPUIDImplementer {\n    CPUID_IMPLEMENTER_ARM = 0x41,\n}\n\nexport const enum ISA {\n    ARMv6M = 0xC,\n    ARMv7M = 0xF,\n}\n\nexport const ISANames: Map<ISA, string> = new Map<ISA, string>();\nISANames.set(ISA.ARMv6M, \"ARMv6M\");\nISANames.set(ISA.ARMv7M, \"ARMv7M\");\n\nexport const enum CoreType {\n    CortexM0 = 0xc20,\n    CortexM1 = 0xc21,\n    CortexM3 = 0xc23,\n    CortexM4 = 0xc24,\n    CortexM0p = 0xc60,\n}\n\nexport const CoreNames: Map<CoreType, string> = new Map<CoreType, string>();\nCoreNames.set(CoreType.CortexM0, \"Cortex-M0\");\nCoreNames.set(CoreType.CortexM1, \"Cortex-M1\");\nCoreNames.set(CoreType.CortexM3, \"Cortex-M3\");\nCoreNames.set(CoreType.CortexM4, \"Cortex-M4\");\nCoreNames.set(CoreType.CortexM0p, \"Cortex-M0+\");\n\nexport const enum CortexReg {\n    R0 = 0,\n    R1 = 1,\n    R2 = 2,\n    R3 = 3,\n    R4 = 4,\n    R5 = 5,\n    R6 = 6,\n    R7 = 7,\n    R8 = 8,\n    R9 = 9,\n    R10 = 10,\n    R11 = 11,\n    R12 = 12,\n    SP = 13,\n    LR = 14,\n    PC = 15,\n    XPSR = 16,\n    MSP = 17, // Main Stack Pointer\n    PSP = 18, // Process Stack Pointer\n    PRIMASK = 20,  // &0xff\n    CONTROL = 20,  // &0xff000000 >> 24\n}\n\nexport const enum CoreState {\n    TARGET_RESET,\n    TARGET_LOCKUP,\n    TARGET_SLEEPING,\n    TARGET_HALTED,\n    TARGET_RUNNING,\n}\n"],"sourceRoot":"../../src"}